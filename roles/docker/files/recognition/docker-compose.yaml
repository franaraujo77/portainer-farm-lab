version: '3.9'
#https://github.com/blakeblackshear/frigate/issues/6914
services:
  frigate:
    container_name: frigate
    privileged: true
    restart: unless-stopped
    image: ghcr.io/blakeblackshear/frigate:stable-rk
    #image: ghcr.io/blakeblackshear/frigate:stable
    shm_size: "512mb"
    group_add:
      - "106" # render
      - "44"  # video
      - "46"  # plugdev
    devices:
      - /dev/bus/usb:/dev/bus/usb
      - /dev/dri/renderD128:/dev/dri/renderD128 # for intel hwaccel, needs to be updated for your hardware
      - /dev/dri/card0:/dev/dri/card0
      - /dev/rga
      - /dev/video-dec0:/dev/video-dec0
      - /dev/video-enc0:/dev/video-enc0
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_APPS}/recognition/frigate-config/config.yml:/config/config.yml
      - frigate-config:/config
      - ${mountShare}/recognition/frigate:/media/frigate

      - /root/FFmpeg/ffmpeg:/usr/bin/ffmpeg
      - /root/FFmpeg/ffprobe:/usr/bin/ffprobe
      - /root/FFmpeg/ffbuild:/ffmpeg-build
      - /root/mpp/mpp/librockchip_mpp.so.0:/usr/lib/aarch64-linux-gnu/librockchip_mpp.so.0
      - /root/mpp/mpp/librockchip_mpp.so.1:/usr/lib/aarch64-linux-gnu/librockchip_mpp.so.1
      - /usr/lib/aarch64-linux-gnu/libfdk-aac.so.2:/usr/lib/aarch64-linux-gnu/libfdk-aac.so.2
      - /usr/lib/aarch64-linux-gnu/libfdk-aac.so.2.0.2:/usr/lib/aarch64-linux-gnu/libfdk-aac.so.2.0.2
      - /usr/lib/aarch64-linux-gnu/libyuv.so:/usr/lib/aarch64-linux-gnu/libyuv.so
      - /usr/lib/aarch64-linux-gnu/libyuv.so.0:/usr/lib/aarch64-linux-gnu/libyuv.so.0
      - /usr/lib/aarch64-linux-gnu/libyuv.so.0.0.1857:/usr/lib/aarch64-linux-gnu/libyuv.so.0.0.1857
      - /usr/lib/aarch64-linux-gnu/armnn22:/usr/lib/aarch64-linux-gnu/armnn22
      - /usr/lib/aarch64-linux-gnu/armnn32:/usr/lib/aarch64-linux-gnu/armnn32
      - /usr/lib/python3/dist-packages/pyarmnn:/usr/lib/python3/dist-packages/pyarmnn
      - /usr/lib/aarch64-linux-gnu/libarm_compute.so.20:/usr/lib/aarch64-linux-gnu/libarm_compute.so.20
      - /usr/lib/aarch64-linux-gnu/libarm_compute_core.so.20:/usr/lib/aarch64-linux-gnu/libarm_compute_core.so.20
      - /usr/lib/aarch64-linux-gnu/libarm_compute_graph.so.20:/usr/lib/aarch64-linux-gnu/libarm_compute_graph.so.20
      - /usr/lib/aarch64-linux-gnu/libarmnnAclCommon.so.22:/usr/lib/aarch64-linux-gnu/libarmnnAclCommon.so.22
      - /usr/lib/aarch64-linux-gnu/libarmnnSerializer.so.22:/usr/lib/aarch64-linux-gnu/libarmnnSerializer.so.22
      - /usr/lib/aarch64-linux-gnu/libsndio.so.7:/usr/lib/aarch64-linux-gnu/libsndio.so.7
      - /usr/lib/aarch64-linux-gnu/libvpx.so.7:/usr/lib/aarch64-linux-gnu/libvpx.so.7
      - /usr/lib/aarch64-linux-gnu/libaom.so.3:/usr/lib/aarch64-linux-gnu/libaom.so.3
      - /usr/lib/aarch64-linux-gnu/libx264.so.164:/usr/lib/aarch64-linux-gnu/libx264.so.164
      - /usr/lib/aarch64-linux-gnu/libx265.so.199:/usr/lib/aarch64-linux-gnu/libx265.so.199
        
      - type: tmpfs # Optional: 1GB of memory, reduces SSD/SD Card wear
        target: /tmp/cache
        tmpfs:
          size: 1000000000
    ports:
        # Two below needed for Home Assistant
        - "5000:5000"
        - "8554:8554"
        - "1935:1935"
        # Two below needed for 2way stream
        - "8555:8555/tcp"
        - "8555:8555/udp"
        - "1984:1984"
    healthcheck:
      test: curl --fail http://localhost:5000/ || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s       
    environment:
      TZ: ${TIMEZONE}
      FFMPEG_RKMPP_PIXFMT: "YUV420P"
    extra_hosts:
      - "mqtt:${IOT_HOST_IP}"
  double-take:
    #https://github.com/jakowenko/double-take
    container_name: double-take
    image: jakowenko/double-take
    restart: unless-stopped
    volumes:
      - double-take:/.storage
      - ${DOCKER_APPS}/recognition/doubletake-config/config.yml:/.storage/config/config.yml
    ports:
      - 3000:3000
      - 88:8080
    healthcheck:
      test: curl --fail http://localhost:3000/ || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s       
    extra_hosts:
      - "mqtt:${IOT_HOST_IP}"
      - "deepstack-server:${RECOGNITION_HOST_IP}"
    environment:
      TZ: ${TIMEZONE}
  deepstack:
    #https://github.com/johnolafenwa/DeepStack
    container_name: deepstack
    image: deepquestai/deepstack:arm64-server
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:5000/ || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s       
    volumes:
      - deepstack-data:/datastore
    ports:
      - 5050:5000
      - 80:80
    environment:
      TZ: ${TIMEZONE}
      VISION-FACE: 'True'
      MODE: "High"

volumes:
  frigate-config:
    driver: local
  double-take:
    driver: local
  deepstack-data:
    driver: local